plot(dados_sarima$trim, dados_sarima$RCAR6T, type = "l", xlab = "Ano", ylab = "Automoveis Vendidos", main = "Gráfico SARIMA")
library(ggplot2)
# Plotar um gráfico de linhas usando ggplot2
ggplot(dados_sarima, aes(x = trim, y = RCAR6T)) +
geom_line() +
labs(x = "Ano", y = "Automoveis Vendidos", title = "Gráfico SARIMA")
# Plotar um gráfico de linhas usando ggplot2
ggplot(dados_sarima, aes(x = trim, y = RCAR6T)) +
geom_line(color = cor_linha) +
labs(x = "Ano", y = "Automoveis Vendidos", title = "Gráfico SARIMA")
cor_linha = "#24d530"
# Plotar um gráfico de linhas usando ggplot2
ggplot(dados_sarima, aes(x = trim, y = RCAR6T)) +
geom_line(color = cor_linha) +
labs(x = "Ano", y = "Automoveis Vendidos", title = "Gráfico SARIMA")
cor_linha = "#51d551"
# Plotar um gráfico de linhas usando ggplot2
ggplot(dados_sarima, aes(x = trim, y = RCAR6T)) +
geom_line(color = cor_linha) +
labs(x = "Ano", y = "Automoveis Vendidos", title = "Gráfico SARIMA")
cor_linha = "#A52A2A"
# Plotar um gráfico de linhas usando ggplot2
ggplot(dados_sarima, aes(x = trim, y = RCAR6T)) +
geom_line(color = cor_linha) +
labs(x = "Ano", y = "Automoveis Vendidos", title = "Gráfico SARIMA")
ggsave(paste0(folder,"/sarima.png"), plot = grafico, width = 6, height = 4, dpi = 300)
folder = "Diogo"
ggsave(paste0(folder,"/sarima.png"), plot = grafico, width = 6, height = 4, dpi = 300)
# Plotar o Sarima
grafico_sar_inicial <- ggplot(dados_sarima, aes(x = trim, y = RCAR6T)) +
geom_line(color = cor_linha) +
labs(x = "Ano", y = "Automoveis Vendidos", title = "Gráfico SARIMA")
ggsave(paste0(folder,"/sarima.png"), plot = grafico_sar_inicial, width = 6, height = 4, dpi = 300)
grafico_sar_inicial
dados_cointegracao <- read_excel("dados sobre cointegracao.xlsx", sheet = 1)
library(tseries)
dados_cointegracao <- read_excel("dados sobre cointegracao.xlsx", sheet = 1)
dados_cointegracao
#Teste adfFuller
adf.test(dados_sarima$RCAR6T)
set.seed(75395)
#Teste adfFuller
adf.test(dados_sarima$RCAR6T)
#Teste adfFuller
results_adf_sar <- adf.test(dados_sarima$RCAR6T)
results_adf_sar
results_adf_sar.p-value
results_adf_sar$p.value
output <- paste("Augmented Dickey-Fuller Test\n\n",
"data: dados_sarima$RCAR6T\n",
"Dickey-Fuller =", sprintf("%.4f", results_adf_sar$statistic), ",",
"Lag order =","5" , ",",
"p-value =", sprintf("%.5f", results_adf_sar$p.value), "\n",
"alternative hypothesis:", alternative_hypothesis)
#Teste adfFuller
results_adf_sar <- adf.test(dados_sarima$RCAR6T)
output <- paste("Augmented Dickey-Fuller Test\n\n",
"data: dados_sarima$RCAR6T\n",
"Dickey-Fuller =", sprintf("%.4f", results_adf_sar$statistic), ",",
"Lag order =","5" , ",",
"p-value =", sprintf("%.5f", results_adf_sar$p.value), "\n",
"alternative hypothesis:", alternative_hypothesis)
output <- paste("Augmented Dickey-Fuller Test\n\n",
"data: dados_sarima$RCAR6T\n",
"Dickey-Fuller =", sprintf("%.4f", results_adf_sar$statistic), ",",
"Lag order = ","5" , ",",
"p-value =", sprintf("%.5f", results_adf_sar$p.value), "\n",
"alternative hypothesis: stationary")
output
library(magick)
install.packages("magick")
output <- paste("Augmented Dickey-Fuller Test\n\n",
"data: dados_sarima$RCAR6T\n",
"Dickey-Fuller =", sprintf("%.4f", results_adf_sar$statistic), ",",
"Lag order = ","5" , ",",
"p-value =", sprintf("%.5f", results_adf_sar$p.value), "\n",
"alternative hypothesis: stationary")
imagem <- image_graph(width = 800, height = 400)
library(magick)
imagem <- image_graph(width = 800, height = 400)
text(x = 0.5, y = 0.5, output, vfont = "Arial", size = 20)
dev.off()
# Salvar a imagem como arquivo JPG
imagem_nome <- "output.jpg"
image_write(imagem, imagem_nome)
imagem <- image_graph(width = 800, height = 400)
imagem
text(x = 0.5, y = 0.5, output, vfont = "Arial", size = 20)
dados_cointegracao <- read_excel("dados sobre cointegracao.xlsx", sheet = 1)
library(gridExtra)
install.packages("gridExtra")
install.packages("gridExtra")
library(gridExtra)
texto_visualizacao <- textplot(text = output, hjust = 0.5, vjust = 0.5)
library(gridExtra)
texto_visualizacao <- textplot(text = output, hjust = 0.5, vjust = 0.5)
textPlot <- function(plotname, string){
par(mar=c(0,0,0,0))
pdf(paste0(plotname, ".pdf"))
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, paste(string), cex = 4, col = "black", family="serif", font=2, adj=0.5)
dev.off()
}
textPlot("teste",output)
text(x = 0.5, y = 0.5, paste(string), cex = 4, col = "black", family="serif", font=0.1, adj=0.5)
textPlot("teste",output)
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, paste(string), cex = 4, col = "black", family="serif", font=0.1, adj=0.5)
text(x = 0.5, y = 0.5, paste(output), cex = 4, col = "black", family="serif", font=0.1, adj=0.5)
text(x = 0.5, y = 0.5, paste(output), cex = 4, col = "black", family="serif", font=0.01, adj=0.5)
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, paste(output), cex = 4, col = "black", family="serif", font=0.01, adj=0.5)
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, paste(output), cex = 2, col = "black", family="serif", font=0.01, adj=0.5)
grafico <- plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, paste(output), cex = 2, col = "black", family="serif", font=0.01, adj=0.5)
grafico <- text(x = 0.5, y = 0.5, paste(output), cex = 2, col = "black", family="serif", font=0.01, adj=0.5)
grafico
dev.off()
grafico <- plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, paste(output), cex = 2, col = "black", family="serif", font=0.01, adj=0.5)
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, paste(output), cex = 1, col = "black", family="serif", font=0.01, adj=0.5)
text(x = 0, y = 0, paste(output), cex = 1.5, col = "black", family="serif", font=0.01, adj=0.5)
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0, y = 0, paste(output), cex = 1.5, col = "black", family="serif", font=0.01, adj=0.5)
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, paste(output), cex = 1.5, col = "black", family="serif", font=0.01, adj=0.5)
arquivo_saida <- paste(folder, "/ADFSarima.jpg")
dev.print(jpeg, arquivo_saida)
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, paste(output), cex = 1.5, col = "black", family="serif", font=0.01, adj=0.5)
arquivo_saida <- paste0(folder, "/ADFSarima.jpg")
dev.print(jpeg, arquivo_saida)
jpeg(arquivo_saida, width = 800, height = 600)
jpeg(arquivo_saida, width = 800, height = 600)
dev.off()
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, paste(output), cex = 1.5, col = "black", family="serif", font=0.01, adj=0.5)
arquivo_saida <- paste0(folder, "/ADFSarima.jpg")
jpeg(arquivo_saida, width = 800, height = 600)
dev.off()
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, paste(output), cex = 1.5, col = "black", family="serif", font=0.01, adj=0.5)
arquivo_saida <- paste0(folder, "/ADFSarima.jpg")
jpeg(arquivo_saida, width = 800, height = 600)
dev.off()
image_write(image_graph(), arquivo_saida)
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, paste(output), cex = 1.5, col = "black", family="serif", font=0.01, adj=0.5)
arquivo_saida <- paste0(folder, "/ADFSarima.jpg")
image_write(image_graph(), arquivo_saida)
library(magick)
library(readxl)
library(zoo)
library(lubridate)
library(ggplot2)
library(tseries)
library(magick)
library(gridExtra)
image_write(image_graph(), arquivo_saida)
dev.off()
output
print(output)
cat(output)
dev.off()
library(readxl)
library(zoo)
library(lubridate)
library(ggplot2)
library(tseries)
library(magick)
library(gridExtra)
dados_cointegracao <- read_excel("dados sobre cointegracao.xlsx", sheet = 1)
dados_cointegracao$trim <- as.yearqtr(dados_cointegracao$trim, format = "%Yq%q")
dados_cointegracao
dados_sarima <- read_excel("Dados para replicar SARIMA  Vendas de Automoveis USA.xlsx", sheet = 1)
colnames(dados_sarima) <- c("trim","RCAR6T")
dados_sarima$trim <- as.Date(dados_sarima$trim)
dados_sarima
dados_var <- read_excel("Dados exemplo Modelo VAR sobre vendas veiculos e juros.xlsx", sheet=1)
dados_var$txj <- as.numeric(dados_var$txj)
colnames(dados_var) <- c("trim","vv","txj")
dados_var$trim <- ymd(paste0(dados_var$trim, "01"))
## Codigo
set.seed(75395)
cor_linha = "#A52A2A"
folder = "Diogo"
# Plotar o Sarima
grafico_sar_inicial <- ggplot(dados_sarima, aes(x = trim, y = RCAR6T)) +
geom_line(color = cor_linha) +
labs(x = "Ano", y = "Automoveis Vendidos", title = "Gráfico SARIMA")
ggsave(paste0(folder,"/sarima.png"), plot = grafico_sar_inicial, width = 6, height = 4, dpi = 300)
grafico_sar_inicial
#Teste adfFuller
results_adf_sar <- adf.test(dados_sarima$RCAR6T)
output <- paste("Augmented Dickey-Fuller Test\n\n",
"data: dados_sarima$RCAR6T\n",
"Dickey-Fuller =", sprintf("%.4f", results_adf_sar$statistic), ",",
"Lag order = ","5" , ",",
"p-value =", sprintf("%.5f", results_adf_sar$p.value), "\n",
"alternative hypothesis: stationary")
cat(output)
dev.off()
# alterar segunda linha, onde ta escrito data:
output <- paste("\t\tAugmented Dickey-Fuller Test\n\n",
"data: dados_sarima$RCAR6T\n",
"Dickey-Fuller =", sprintf("%.4f", results_adf_sar$statistic), ",",
"Lag order = ","5" , ",",
"p-value =", sprintf("%.5f", results_adf_sar$p.value), "\n",
"alternative hypothesis: stationary")
cat(output)
adf.test(dados_sarima$RCAR6T)
# alterar segunda linha, onde ta escrito data:
output <- paste("\tAugmented Dickey-Fuller Test\n\n",
"data: dados_sarima$RCAR6T\n",
"Dickey-Fuller =", sprintf("%.4f", results_adf_sar$statistic), ",",
"Lag order = ","5" , ",",
"p-value =", sprintf("%.5f", results_adf_sar$p.value), "\n",
"alternative hypothesis: stationary")
cat(output)
# alterar segunda linha, onde ta escrito data:
output <- paste0("\tAugmented Dickey-Fuller Test\n\n",
"data: dados_sarima$RCAR6T\n",
"Dickey-Fuller =", sprintf("%.4f", results_adf_sar$statistic), ",",
"Lag order = ","5" , ",",
"p-value =", sprintf("%.5f", results_adf_sar$p.value), "\n",
"alternative hypothesis: stationary")
cat(output)
adf.test(dados_sarima$RCAR6T)
# alterar segunda linha, onde ta escrito data:
output <- paste0("\tAugmented Dickey-Fuller Test\n\n",
"data: dados_sarima$RCAR6T\n",
"Dickey-Fuller = ", sprintf("%.4f", results_adf_sar$statistic), ",",
" Lag order = ","5" , ",",
" p-value =", sprintf("%.5f", results_adf_sar$p.value), "\n",
"alternative hypothesis: stationary")
cat(output)
adf.test(dados_sarima$RCAR6T)
adf.test(dados_sarima$RCAR6T)
# alterar segunda linha, onde ta escrito data:
output <- paste0("\tAugmented Dickey-Fuller Test\n\n",
"data: dados_sarima$RCAR6T\n",
"Dickey-Fuller = ", sprintf("%.4f", results_adf_sar$statistic), ",",
" Lag order = ","5" , ",",
" p-value = ", sprintf("%.5f", results_adf_sar$p.value), "\n",
"alternative hypothesis: stationary")
cat(output)
acf(dados_sarima$RCAR6T)
acf(dados_sarima$RCAR6T)
acf(dados_sarima$RCAR6T)
# Calcular e plotar o ACF
acf_result <- acf(dados_sarima$RCAR6T)
plot(acf_result, main = "Autocorrelation Function (ACF)")
dev.on()
library(readxl)
library(readxl)
library(zoo)
library(lubridate)
library(ggplot2)
library(tseries)
library(magick)
library(gridExtra)
dados_cointegracao <- read_excel("dados sobre cointegracao.xlsx", sheet = 1)
dados_cointegracao$trim <- as.yearqtr(dados_cointegracao$trim, format = "%Yq%q")
dados_cointegracao
dados_sarima <- read_excel("Dados para replicar SARIMA  Vendas de Automoveis USA.xlsx", sheet = 1)
colnames(dados_sarima) <- c("trim","RCAR6T")
dados_sarima$trim <- as.Date(dados_sarima$trim)
dados_sarima
dados_var <- read_excel("Dados exemplo Modelo VAR sobre vendas veiculos e juros.xlsx", sheet=1)
dados_var$txj <- as.numeric(dados_var$txj)
colnames(dados_var) <- c("trim","vv","txj")
dados_var$trim <- ymd(paste0(dados_var$trim, "01"))
set.seed(75395)
cor_linha = "#A52A2A"
folder = "Diogo"
# Plotar o Sarima
grafico_sar_inicial <- ggplot(dados_sarima, aes(x = trim, y = RCAR6T)) +
geom_line(color = cor_linha) +
labs(x = "Ano", y = "Automoveis Vendidos", title = "Gráfico SARIMA")
ggsave(paste0(folder,"/sarima.png"), plot = grafico_sar_inicial, width = 6, height = 4, dpi = 300)
grafico_sar_inicial
#Teste adfFuller
results_adf_sar <- adf.test(dados_sarima$RCAR6T)
# alterar segunda linha, onde ta escrito data:
output <- paste0("\tAugmented Dickey-Fuller Test\n\n",
"data: dados_sarima$RCAR6T\n",
"Dickey-Fuller = ", sprintf("%.4f", results_adf_sar$statistic), ",",
" Lag order = ","5" , ",",
" p-value = ", sprintf("%.5f", results_adf_sar$p.value), "\n",
"alternative hypothesis: stationary")
cat(output)
# Calcular e plotar o ACF
acf_result <- acf(dados_sarima$RCAR6T)
ggplot(acf_result)
acf_result
library(ggfortify)
install.packages('ggfortify')
library(ggfortify)
acf_df <- fortify(acf_result)
ggplot(acf_df)
# Calcular e plotar o ACF
acf_result <- acf(dados_sarima$RCAR6T)
acf_df <- fortify(acf_result)
plot_acf <- ggplot(acf_df, aes(x = Lag, y = acf)) +
geom_bar(stat = "identity", color = cor_linha) +
labs(title = "Autocorrelation Function (ACF)")
acf(dados_sarima$RCAR6T)
acf(dados_sarima$RCAR6T)
acf(dados_sarima$RCAR6T)
acf(dados_sarima$RCAR6T)
plot_acf
# Calcular e plotar o ACF
acf_result <- acf(dados_sarima$RCAR6T)
acf_df <- fortify(acf_result)
plot_acf <- ggplot(acf_df, aes(x = Lag, y = acf)) +
geom_bar(stat = "identity", color = cor_linha) +
labs(title = "Autocorrelation Function (ACF)")
plot_acf
acf_df
# Calcular e plotar o ACF
acf_result <- acf(dados_sarima$RCAR6T)
jpeg(file)
acf(dados_sarima$RCAR6T)
acf_result
# Calcular e plotar o ACF
acf_result <- acf(dados_sarima$RCAR6T)
file <- paste0(folder,"/acfSarima.jpg")
ggsave(file, acf_result, width = 8, height = 6, dpi = 300)
# Calcular e plotar o ACF
acf_result <- acf(dados_sarima$RCAR6T)
plot_acf <- plot(acf_result, main = "Autocorrelation Function (ACF)")
file <- paste0(folder,"/acfSarima.jpg")
ggsave(file, plot_acf, width = 8, height = 6, dpi = 300)
plot_acf
# Calcular e plotar o ACF
acf_result <- acf(dados_sarima$RCAR6T)
plot_acf <- plot(acf_result, main = "Autocorrelation Function (ACF)")
plot_acf
plot_acf <- ggplot(acf_result, main = "Autocorrelation Function (ACF)")
plot_acf
# Calcular e plotar o ACF
acf_result <- acf(dados_sarima$RCAR6T)
plot_acf <- ggplot(acf_result, main = "Autocorrelation Function (ACF)")
file <- paste0(folder,"/acfSarima.jpg")
# Calcular e plotar o ACF
acf_result <- acf(dados_sarima$RCAR6T)
file <- paste0(folder,"/acfSarima.jpg")
dev.print(png, file)
dev.print(png, file,width = 600, height = 400)
# Calcular e plotar o ACF
acf_result <- acf(dados_sarima$RCAR6T)
plot_acf <- plot(acf_result, main = "Autocorrelation Function (ACF)")
plot_acf
file <- paste0(folder,"/acfSarima.jpg")
dev.print(png, file,width = 600, height = 400)
#PLotar pacf
acf_result <- pacf(dados_sarima$RCAR6T)
plot(acf_result, main = "Parcial Autocorrelation Function (PACF)")
file <- paste0(folder,"/pacfSarima.jpg")
dev.print(png, file,width = 600, height = 400)
# Calcular e plotar o ACF
acf_result <- acf(dados_sarima$RCAR6T, lag=50)
plot(acf_result, main = "Autocorrelation Function (ACF)")
file <- paste0(folder,"/acfSarima.jpg")
dev.print(png, file,width = 600, height = 400)
#PLotar pacf
acf_result <- pacf(dados_sarima$RCAR6T, lag=50)
plot(acf_result, main = "Parcial Autocorrelation Function (PACF)")
file <- paste0(folder,"/pacfSarima.jpg")
dev.print(png, file,width = 600, height = 400)
plot(acf_result, main = "Autocorrelation Function (ACF)", color = cor_linha)
plot(acf_result, main = "Autocorrelation Function (ACF)", col = cor_linha)
file <- paste0(folder,"/acfSarima.jpg")
dev.print(png, file,width = 600, height = 400)
#Plotar pacf
acf_result <- pacf(dados_sarima$RCAR6T, lag=50)
plot(acf_result, main = "Parcial Autocorrelation Function (PACF)", col = cor_linha)
file <- paste0(folder,"/pacfSarima.jpg")
dev.print(png, file,width = 600, height = 400)
modelo_sarima <- Arima(dados_sarima, order = c(1, 0, 0), seasonal = list(order = c(1, 0, 0), period = 12))
library(stats)
modelo_sarima <- Arima(dados_sarima, order = c(1, 0, 0), seasonal = list(order = c(1, 0, 0), period = 12))
library(stats)
modelo_sarima <- Arima(dados_sarima, order = c(1, 0, 0), seasonal = list(order = c(1, 0, 0), period = 12))
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
library(stats)
modelo_sarima <- Arima(dados_sarima, order = c(1, 0, 0), seasonal = list(order = c(1, 0, 0), period = 12))
library(forecast)
install.packages("forecast")
library(forecast)
modelo_sarima <- Arima(dados_sarima, order = c(1, 0, 0), seasonal = list(order = c(1, 0, 0), period = 12))
dados_sarima
modelo_sarima <- Arima(dados_sarima$RCAR6T, order = c(1, 0, 0), seasonal = list(order = c(1, 0, 0), period = 12))
# Sumário do modelo
summary(modelo_sarima)
fake_sarima_dados = "dados_sarima"
# alterar segunda linha, onde ta escrito data:
output <- paste0("\tAugmented Dickey-Fuller Test\n\n",
"data:, ", fake_sarima_dados, "$RCAR6T\n",
"Dickey-Fuller = ", sprintf("%.4f", results_adf_sar$statistic), ",",
" Lag order = ","5" , ",",
" p-value = ", sprintf("%.5f", results_adf_sar$p.value), "\n",
"alternative hypothesis: stationary")
cat(output)
# alterar segunda linha, onde ta escrito data:
output <- paste0("\tAugmented Dickey-Fuller Test\n\n",
"data: ", fake_sarima_dados, "$RCAR6T\n",
"Dickey-Fuller = ", sprintf("%.4f", results_adf_sar$statistic), ",",
" Lag order = ","5" , ",",
" p-value = ", sprintf("%.5f", results_adf_sar$p.value), "\n",
"alternative hypothesis: stationary")
cat(output)
modelo_sarima <- Arima(dados_sarima$RCAR6T, order = c(1, 0, 0), seasonal = list(order = c(1, 0, 0), period = 12))
# Sumário do modelo
objeto_summary <- summary(modelo_sarima)
# Remover a primeira linha e substituí-la por uma linha personalizada
novo_summary <- c(paste0("Series:", fake_sarima_dados ,"$RCAR6T"), objeto_summary[-1])
# Imprimir o novo summary
cat(paste(novo_summary, collapse = "\n"))
objeto_summary
objeto_summary[-1]
objeto_summary
as.character(objeto_summary)
objeto_summary
,as.character(objeto_summary)[-1]
as.character(objeto_summary)[-1]
objeto_summary
objeto_summary[-1]
# Sumário do modelo
objeto_summary <- catpure.output(summary(modelo_sarima))
# Sumário do modelo
objeto_summary <- capture.output(summary(modelo_sarima))
objeto_summary
# Remover a primeira linha e substituí-la por uma linha personalizada
novo_summary <- c(paste0("Series:", fake_sarima_dados ,"$RCAR6T"),objeto_summary[-1])
# Imprimir o novo summary
cat(paste(novo_summary, collapse = "\n"))
# alterar segunda linha, onde ta escrito data:
output <- paste0("\tAugmented Dickey-Fuller Test\n\n",
"data: ", fake_sarima_dados, "$RCAR6T\n",
"Dickey-Fuller = ", sprintf("%.4f", results_adf_sar$statistic), ",",
" Lag order = ","5" , ",",
" p-value = ", sprintf("%.5f", results_adf_sar$p.value), "\n",
"alternative hypothesis: stationary")
writeLines(output, paste0(folder, "/ADFt.txt"))
library(readxl)
library(zoo)
library(lubridate)
library(ggplot2)
library(tseries)
library(magick)
library(gridExtra)
library(ggfortify)
library(stats)
library(forecast)
dados_cointegracao <- read_excel("dados sobre cointegracao.xlsx", sheet = 1)
dados_cointegracao$trim <- as.yearqtr(dados_cointegracao$trim, format = "%Yq%q")
dados_cointegracao
dados_sarima <- read_excel("Dados para replicar SARIMA  Vendas de Automoveis USA.xlsx", sheet = 1)
colnames(dados_sarima) <- c("trim","RCAR6T")
dados_sarima$trim <- as.Date(dados_sarima$trim)
dados_sarima
dados_var <- read_excel("Dados exemplo Modelo VAR sobre vendas veiculos e juros.xlsx", sheet=1)
dados_var$txj <- as.numeric(dados_var$txj)
colnames(dados_var) <- c("trim","vv","txj")
dados_var$trim <- ymd(paste0(dados_var$trim, "01"))
set.seed(75395)
cor_linha = "#A52A2A"
folder = "Diogo"
fake_sarima_dados = "dados_sarima"
# Plotar o Sarima
grafico_sar_inicial <- ggplot(dados_sarima, aes(x = trim, y = RCAR6T)) +
geom_line(color = cor_linha) +
labs(x = "Ano", y = "Automoveis Vendidos", title = "Gráfico SARIMA")
ggsave(paste0(folder,"/sarima.png"), plot = grafico_sar_inicial, width = 6, height = 4, dpi = 300)
grafico_sar_inicial
#Teste adfFuller
results_adf_sar <- adf.test(dados_sarima$RCAR6T)
# alterar segunda linha, onde ta escrito data:
output <- paste0("\tAugmented Dickey-Fuller Test\n\n",
"data: ", fake_sarima_dados, "$RCAR6T\n",
"Dickey-Fuller = ", sprintf("%.4f", results_adf_sar$statistic), ",",
" Lag order = ","5" , ",",
" p-value = ", sprintf("%.5f", results_adf_sar$p.value), "\n",
"alternative hypothesis: stationary")
writeLines(output, paste0(folder, "/ADFt.txt"))
# Calcular e plotar o ACF
acf_result <- acf(dados_sarima$RCAR6T, lag=50)
plot(acf_result, main = "Autocorrelation Function (ACF)", col = cor_linha)
file <- paste0(folder,"/acfSarima.jpg")
dev.print(png, file,width = 600, height = 400)
#Plotar pacf
acf_result <- pacf(dados_sarima$RCAR6T, lag=50)
plot(acf_result, main = "Parcial Autocorrelation Function (PACF)", col = cor_linha)
file <- paste0(folder,"/pacfSarima.jpg")
dev.print(png, file,width = 600, height = 400)
modelo_sarima <- Arima(dados_sarima$RCAR6T, order = c(1, 0, 0), seasonal = list(order = c(1, 0, 0), period = 12))
# Sumário do modelo
objeto_summary <- capture.output(summary(modelo_sarima))
# Remover a primeira linha e substituí-la por uma linha personalizada
novo_summary <- c(paste0("Series: ", fake_sarima_dados ,"$RCAR6T"),objeto_summary[-1])
# Imprimir o novo summary
cat(paste(novo_summary, collapse = "\n"))
summary(modelo_sarima)
