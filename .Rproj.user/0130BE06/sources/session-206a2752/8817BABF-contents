---
title: "Trabalho Final Series Temporais"
output:
  html_document:
    df_print: paged
  html_notebook: default
  pdf_document: default
  word_document: default
---
Aluno: Diogo Costa Hutner

Primeiro, carregando os modulos e os dados.
```{r}
library(readxl)
library(zoo)
library(lubridate)
library(ggplot2)
library(tseries)
library(magick)
library(gridExtra)
library(ggfortify)
library(stats)
library(forecast)
library(vars)
library(lmtest)
library(stargazer)
library(urca)


dados_cointegracao <- read_excel("dados sobre cointegracao.xlsx", sheet = 1)
dados_cointegracao$trim <- as.yearqtr(dados_cointegracao$trim, format = "%Yq%q")
dados_cointegracao

dados_sarima <- read_excel("Dados para replicar SARIMA  Vendas de Automoveis USA.xlsx", sheet = 1)
colnames(dados_sarima) <- c("trim","RCAR6T")
dados_sarima$trim <- as.Date(dados_sarima$trim)
dados_sarima

dados_var <- read_excel("Dados exemplo Modelo VAR sobre vendas veiculos e juros.xlsx", sheet=1)
dados_var$txj <- as.numeric(dados_var$txj)
colnames(dados_var) <- c("trim","vv","txj")
dados_var$trim <- ymd(paste0(dados_var$trim, "01"))
cor_linha <- "#11CC22"
```
# Modelo SARIMA

De começo, ver os graficos como eles estão, depois plotar ele e fazer teste de estacionaridade, apos isso ACF e PACF. Por fim postar um summary do modelo
```{r}
dados_sarima
```
```{r}
grafico_sar_inicial <- ggplot(dados_sarima, aes(x = trim, y = RCAR6T)) +
  geom_line(color = cor_linha) +
  labs(x = "Ano", y = "Automoveis Vendidos", title = "Gráfico p/ SARIMA Automoveis")
grafico_sar_inicial
```

```{r}
results_adf_sar <- adf.test(dados_sarima$RCAR6T)
results_adf_sar
```

```{r}
acf_result <- acf(dados_sarima$RCAR6T, lag=50)
plot(acf_result, main = "Autocorrelation Function (ACF)", col = cor_linha)
```
```{r}
as.data.frame(acf_result$acf)
```
```{r}
acf_result <- pacf(dados_sarima$RCAR6T, lag=50, col = cor_linha)
```
```{r}
pacf(dados_sarima$RCAR6T, lag=50, col = cor_linha)
```


```{r}
modelo_sarima <- Arima(dados_sarima$RCAR6T, order = c(1, 0, 0), seasonal = list(order = c(1, 0, 0), period = 12))

summary(modelo_sarima)
```

# modelo VAR

Primeiro, ver os dados, segundo os graficos, depois teste de estacionaridade
```{r}
dados_var
```


```{r}
grafico_var_inicial_vv <- ggplot(dados_var, aes(x = trim, y = vv)) +
  geom_line(color = cor_linha) +
  labs(x = "Ano", y = "Automoveis Vendidos", title = "Venda de Veiculos")
grafico_var_inicial_vv
```
```{r}
grafico_var_inicial_vv <- ggplot(dados_var, aes(x = trim, y = txj)) +
  geom_line(color = cor_linha) +
  labs(x = "Ano", y = "Taxa de Juros", title = "Taxa de Juros")

grafico_var_inicial_vv
```
Teste de Dickey-Fuller sobre vendas de carros e apos sobre taxa de juros
```{r}
adf.test(dados_var$vv)
```
```{r}
adf.test(dados_var$txj)
```
Montando um modelo VAR:

```{r}
modelo_var <- VAR(dados_var[,c("txj",'vv')], p = 1)
summary(modelo_var)
```
Causalidade de Granger

```{r}
grangertest(txj ~ vv, data = dados_var)
print('-------------')
grangertest(vv ~ txj, data = dados_var)
```

Plotando graficos de IRF
```{r}
irf_txj <- irf(modelo_var,impulse = "txj", response=c("txj","vv"), n.ahead = 10)

dados_irf_txj <- data.frame(
  txj = irf_txj$irf$txj[, 'txj'],
  vv = irf_txj$irf$txj[, 'vv'],
  lower_txj = irf_txj$Lower$txj[, 'txj'],
  upper_txj = irf_txj$Upper$txj[, 'txj'],
  lower_vv = irf_txj$Lower$txj[, 'vv'],
  upper_vv = irf_txj$Upper$txj[, 'vv']
)

grafico_irf_txj_txj <- ggplot(dados_irf_txj, aes(x = seq_along(txj))) +
  geom_line(aes(y = txj, color = "Resposta ao Impulso"), size = 1) +
  geom_line(aes(y = lower_txj, color = "Limite Inferior"), linetype = "dashed", color = "red") +
  geom_line(aes(y = upper_txj, color = "Limite Superior"), linetype = "dashed", color = "red") +
  scale_color_manual(values = c("Impulse Response" = cor_linha, "Lower Bound" = "red", "Upper Bound" = "red")) +
  labs(x = "Lag", y = "Taxa Juros", title = "Impulse Response Function da taxa de juros na taixa de juros") +
  theme_minimal()


grafico_irf_txj_vv <- ggplot(dados_irf_txj, aes(x = seq_along(txj))) +
  geom_line(aes(y = vv, color = "Resposta ao Impulso"), size = 1) +
  geom_line(aes(y = lower_vv, color = "Limite Inferior"), linetype = "dashed", color = "red") +
  geom_line(aes(y = upper_vv, color = "Limite Superior"), linetype = "dashed", color = "red") +
  scale_color_manual(values = c("Impulse Response" = cor_linha, "Lower Bound" = "red", "Upper Bound" = "red")) +
  labs(x = "Lag", y = "Venda de Carros", title = "Impulse Response Function da taixa de juros na venda de carros") +
  theme_minimal()
print(grafico_irf_txj_txj)
```
```{r}
print(grafico_irf_txj_vv)
```


```{r}

irf_vv <- irf(modelo_var,impulse = "vv", response=c("txj","vv"), n.ahead = 10)

dados_irf_vv <- data.frame(
  txj = irf_vv$irf$vv[, 'txj'],
  vv = irf_vv$irf$vv[, 'vv'],
  lower_txj = irf_vv$Lower$vv[, 'txj'],
  upper_txj = irf_vv$Upper$vv[, 'txj'],
  lower_vv = irf_vv$Lower$vv[, 'vv'],
  upper_vv = irf_vv$Upper$vv[, 'vv']
)

grafico_irf_vv_txj <- ggplot(dados_irf_vv, aes(x = seq_along(txj))) +
  geom_line(aes(y = txj, color = "Resposta ao Impulso"), size = 1) +
  geom_line(aes(y = lower_txj, color = "Limite Inferior"), linetype = "dashed", color = "red") +
  geom_line(aes(y = upper_txj, color = "Limite Superior"), linetype = "dashed", color = "red") +
  scale_color_manual(values = c("Impulse Response" = cor_linha, "Lower Bound" = "red", "Upper Bound" = "red")) +
  labs(x = "Lag", y = "Taxa Juros", title = "Impulse Response Function da venda de carro na taxa de juros") +
  theme_minimal()


grafico_irf_vv_txj <- ggplot(dados_irf_vv, aes(x = seq_along(txj))) +
  geom_line(aes(y = vv, color = "Resposta ao Impulso"), size = 1) +
  geom_line(aes(y = lower_vv, color = "Limite Inferior"), linetype = "dashed", color = "red") +
  geom_line(aes(y = upper_vv, color = "Limite Superior"), linetype = "dashed", color = "red") +
  scale_color_manual(values = c("Impulse Response" = cor_linha, "Lower Bound" = "red", "Upper Bound" = "red")) +
  labs(x = "Lag", y = "Venda de Carros", title = "Impulse Response Function da venda de carros na venda de carros") +
  theme_minimal()
grafico_irf_vv_txj
```
```{r}
grafico_irf_vv_txj
```
# Cointegração e VEC 

Por questão de espaço, não irei realizar visivelmente aq o Dickey-Fuller, mas mostrou que não é estacionaria, então vamos diferenciar
```{r}
dados_dif_cointegracao <- cbind(diff(dados_cointegracao$c), diff(dados_cointegracao$y))
colnames(dados_dif_cointegracao) <- c("c","y")
rownames(dados_dif_cointegracao) <- dados_cointegracao$trim[-1]
df_dados_dif_cointegracao <- fortify(dados_dif_cointegracao)
df_dados_dif_cointegracao
```
```{r}
grafico_var_inicial_vv <- ggplot(df_dados_dif_cointegracao, aes(x = index(dados_dif_cointegracao), y = c)) +
  geom_line(color = cor_linha) +
  labs(x = "Ano", y = "Diff Consumo Norte Americano", title = "Consumo Norte Americano")

grafico_var_inicial_vv
```
```{r}

grafico_var_inicial_vv <- ggplot(df_dados_dif_cointegracao, aes(x = index(dados_dif_cointegracao), y = y)) +
  geom_line(color = cor_linha) +
  labs(x = "Ano", y = "Diff PIB Norte Americano", title = "PIB Norte Americano")
grafico_var_inicial_vv
```
Sumario/Resumo do modelo de cointegração:
```{r}
modelo_cointegracao <- lm(y ~ c, data = as.data.frame(dados_dif_cointegracao))
summary(modelo_cointegracao)
```
Analisando os residuos

```{r}
residuos <- fortify(as.data.frame(residuals(modelo_cointegracao)))
colnames(residuos) <- c('res')
rownames(residuos) <- dados_cointegracao$trim[-1]

grafico_resi <- ggplot(residuos, aes(x = rownames(residuos), y = res)) +
  geom_point(color = cor_linha) +
  labs(x = "Ano", y = "Resíduo", title = "Resíduos")
grafico_resi
```
ADF sobre os residuos
```{r}
adf.test(residuos$res)
```
Por fim, um modelo VEC:

```{r}
vec_results <- ca.jo(df_dados_dif_cointegracao, type = "eigen", K=2)
summary(vec_results)
```